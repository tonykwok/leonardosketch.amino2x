<?xml version="1.0" ?>
<project default="all">

    <target name="init">
        <property name="tests.dir" value="samples/js"/>
        <property name="version" value="unknown"/>
        <property name="amino.path" value="dist/amino-${version}.js"/>
        <mkdir dir="build/webos/tests"/>
        
        
        <echo message="basedir = ${basedir}"/>
        <buildnumber/>
        <tstamp>
            <format property="TIMESTAMP" pattern="yyyy-MM-dd_kk-mm"/>
        </tstamp>
        <echo message="timestamp = ${TIMESTAMP}"/>

        <property  name="publish.dir" value="blah"/>
        <echo message="publish dir = ${publish.dir}"/>
        <echo message="build.number = ${build.number}"/>
        <mkdir dir="dist"/>
    </target>
    
    <target name="all" depends="build-java, build-js"/>
    
    
    <target name="build-java" depends="init">
        <mkdir dir="build/classes/"/>
        <javac destdir="build/classes">
            <src path="src/java/core"/>
        </javac>        
        
        <jar destfile="dist/amino-${version}.jar">
            <fileset dir="build/classes"/>
        </jar>
        
    </target>
    
    <target name="build-js" depends="init">
        <concat destfile="dist/amino-${version}.js">
            <fileset dir="src/js/core/"/>
        </concat>
        <concat destfile="dist/amino.js">
            <fileset dir="src/js/core/"/>
        </concat>
    </target>
    
    
    <target name="clean">
        <delete dir="build"/>
        <delete dir="dist"/>
        <delete dir="build/webos/samples"/>
    </target>
    
    <target name="js-doc">
        <mkdir dir="dist/jsdoc"/>
        <exec command="ruby tools/joshdoc.rb src/js/core/amino.js dist/jsdoc/docs.html"/>
        <copy file="tools/doc.css" todir="dist/jsdoc"/>
        <copy file="tools/background.png" todir="dist/jsdoc"/>
    </target>
    
    <target name="java-doc">
        <mkdir dir="dist/javadoc"/>
        <exec command="ruby tools/joshdoc.rb src/java/core/ dist/javadoc/docs.html"/>
        <copy file="tools/doc.css" todir="dist/javadoc"/>
        <copy file="tools/background.png" todir="dist/javadoc"/>
    </target>
    
    <target name="gallery" depends="build-js">
        <mkdir dir="dist/gallery"/>
        <antcall target="build-gallery-app"><param name="appname" value="basicparticles"/></antcall>
        <antcall target="build-gallery-app"><param name="appname" value="blocks"/></antcall>
        <antcall target="build-gallery-app"><param name="appname" value="touchclock"/></antcall>
        <antcall target="build-gallery-app"><param name="appname" value="photoadjust"/></antcall>
        <antcall target="build-gallery-app"><param name="appname" value="fish"/></antcall>
        <antcall target="build-gallery-app"><param name="appname" value="planetrover"/></antcall>
        <antcall target="build-gallery-app"><param name="appname" value="linechart"/></antcall>
    </target>
    
    
    <target name="build-gallery-app">    
        <copy todir="dist/gallery">
            <fileset dir="samples/js/">
                <exclude name="${appname}/index.html"/>
                <include name="${appname}/**"/>
            </fileset>
        </copy>
        <copy todir="dist/gallery">
            <fileset dir="samples/js/">
                <include name="${appname}/index.html"/>
            </fileset>
            <filterchain>
                <tokenfilter>
                    <filetokenizer/>
                    <replaceregex pattern="src=&quot;(.*)/amino.js&quot;" flags="s" replace="src='../../amino-${version}.js'"/>
                </tokenfilter>
            </filterchain>
        </copy>
    </target>
    
    
    <target name="publish" depends="init, all, js-doc, java-doc, gallery">
        <copy todir="${publish.dir}">
            <fileset dir="dist/">
            </fileset>
        </copy>
    </target>
    
    <target name="build-touchpad-apps">
        <antcall target="build-touchpad-app"><param name="appname" value="photoadjust"/></antcall>
        <antcall target="build-touchpad-app"><param name="appname" value="basicparticles"/></antcall>
        <antcall target="build-touchpad-app"><param name="appname" value="blocks"/></antcall>
        <antcall target="build-touchpad-app"><param name="appname" value="touchclock"/></antcall>
        <antcall target="build-touchpad-app"><param name="appname" value="planetrover"/></antcall>
        <antcall target="build-touchpad-app"><param name="appname" value="fish"/></antcall>
    </target>
    
    <target name="build-touchpad-app" depends="init, build-js">
        <property name="appdir" value="build/webos/samples/${appname}"/>
        <mkdir dir="${appdir}"/>
        <copy todir="${appdir}">
            <fileset dir="${tests.dir}/${appname}">
                <include name="**"/>
            </fileset>
        </copy>
        
        <replaceregexp file="${appdir}/index.html"
            match='"(.+)/amino.js"'
            replace="'amino.js'"
            byline="true"
        />
        
        <copy tofile="${appdir}/amino.js" file="${amino.path}"/>

        <echo file="${appdir}/appinfo.json">
{
        "id": "com.joshondesign.amino.${appname}",
        "version": "0.0.1",
        "vendor": "Josh Marinacci",
        "type": "web",
        "main": "index.html",
        "title": "Amino ${appname}",
        "icon": "icon.png",
        "uiRevision" : 2,
        "dockMode": true        
}        </echo>


        <exec command="palm-package ${appname}" dir="build/webos/samples"/>
        <exec command="palm-install com.joshondesign.amino.${appname}_0.0.1_all.ipk" dir="build/webos/samples"/>
    </target>

    <target name="run-touchpad-app" depends="init, build-touchpad-app">
        <!--<param name="appname" value="visualizer"/></antcall>-->
        <exec command="palm-launch com.joshondesign.amino.${appname}" dir="build/webos/tests"/>
    </target>



    <!--  desktop mac support -->

    <target name="testmac">
        <!--
           make sure everything is compiled
           copy required native lib
           copy required jni lib
           copy required java libs
           copy app jar
           run appbundler
        -->

        <java
            classpath="lib/AppBundler.jar;lib/XMLLib.jar"
            classname="com.joshondesign.appbundler.Bundler" fork="true">
            <arg value="--file=examples/app/particles.xml"/>
            <arg value="--target=mac"/>
            <arg value="--outdir=dist/java2d"/>
            <arg value="--jardir=out/artifacts/examples_jar/"/>
            <arg value="--jardir=out/artifacts/amino2_core_jar/"/>
            <arg value="--jardir=out/artifacts/amino_java2d/"/>
        </java>

        <java
            classpath="lib/AppBundler.jar;lib/XMLLib.jar"
            classname="com.joshondesign.appbundler.Bundler" fork="true">
            <arg value="--file=examples/app/particles-jogl.xml"/>
            <arg value="--target=mac"/>
            <arg value="--outdir=dist/jogl"/>
            <arg value="--jardir=out/artifacts/examples_jar/"/>
            <arg value="--jardir=out/artifacts/amino2_core_jar/"/>
            <arg value="--jardir=out/artifacts/amino_java2d/"/>
            <arg value="--jardir=out/artifacts/amino_jogl/"/>
            <arg value="--jardir=lib/"/>
        </java>


    </target>

    <target name="testmacsdl">
        <java
            classpath="lib/AppBundler.jar;lib/XMLLib.jar"
            classname="com.joshondesign.appbundler.Bundler" fork="true">
            <arg value="--file=examples/app/particles-sdl.xml"/>
            <arg value="--target=mac"/>
            <arg value="--outdir=dist/sdl"/>
            <arg value="--jardir=out/artifacts/examples_jar/"/>
            <arg value="--jardir=out/artifacts/amino2_core_jar/"/>
            <arg value="--jardir=out/artifacts/amino_java2d/"/>
            <arg value="--jardir=out/artifacts/amino_sdl/"/>
            <arg value="--jardir=out/artifacts/amino_jogl/"/>
            <arg value="--jardir=lib/"/>
            <arg value="--jardir=../sdl4java/build/macosx/"/>
        </java>
    </target>
    
    <target name="testwebossdl-particles2">
        <java
            classpath="lib/AppBundler.jar;lib/XMLLib.jar"
            classname="com.joshondesign.appbundler.Bundler" fork="true">
            <arg value="--file=examples/app/particles-sdl.xml"/>
            <arg value="--target=webos"/>
            <arg value="--outdir=dist/sdl"/>
            <arg value="--jardir=out/artifacts/examples_jar/"/>
            <arg value="--jardir=out/artifacts/amino2_core_jar/"/>
            <arg value="--jardir=out/artifacts/amino_sdl/"/>
            <arg value="--jardir=lib/"/>
        </java>
        <exec command="palm-package 'dist/sdl/webos/Amino Particles'"/>        
        <exec command="palm-install com.joshondesign.amino.examples.particles_0.0.1_all.ipk"/>
        <exec command="palm-launch com.joshondesign.amino.examples.particles"/>
    </target>
    <!--
    <target name="testwebossdl-particles">
        <property name="staging" value="build/device-staging"/>
        <property name="appid" value="com.joshondesign.amino.particles"/>
        <mkdir dir="${staging}"/>
        <copy todir="${staging}">
            <fileset dir="tools/webos/">
                <include name="*"/>
            </fileset>
        </copy>            
        <copy file="out/artifacts/examples_jar/examples.jar" todir="${staging}"/>
        <copy file="out/artifacts/amino_sdl/amino_sdl.jar" todir="${staging}"/>
        <copy file="out/artifacts/amino2_core_jar/Amino2.jar" todir="${staging}"/>
        
        <echo file="${staging}/appinfo.json">
{
	"id": "${appid}",
	"version": "0.0.1",
	"vendor": "josh",
	"type": "pdk",
	"main": "runit.sh",
	"title": "jpart",
    "icon": "icon.png",
    "requiredMemory": 64
}
</echo>
        <echo file="${staging}/runit.sh">#!/bin/sh
echo "trying to start avian" > /tmp/blah.txt
echo $PWD >> /tmp/blah.txt
export LD_LIBRARY_PATH=.
./avian -Dcom.joshondesign.amino.impl=sdl -cp classpath.jar:sdljava.jar:sdljava_test.jar:examples.jar:amino_sdl.jar:Amino2.jar com.joshondesign.amino.examples.Particles &amp;> /tmp/avian.out        
</echo>

        
        <exec command="palm-package build/device-staging"/>
        
        <exec command="palm-install ${appid}_0.0.1_all.ipk"/>        
        
    </target>
    -->
</project>
